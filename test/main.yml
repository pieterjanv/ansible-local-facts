- name: Run tests
  hosts: localhost
  gather_facts: no

  roles:
    - role: roles/robust_outer
      vars:
        input:
          name: test
        some_var: play

  tasks:

    - name: assert `outer_result.key` is `'value'`
      ansible.builtin.assert:
        that:
          - outer_result.key == 'value'

    - name: Import role robust_outer
      ansible.builtin.import_role:
        name: roles/robust_outer
      vars:
        input:
          name: test

    - name: Include role robust_outer
      ansible.builtin.include_role:
        name: roles/robust_outer
      vars:
        input:
          name: test

    - name: Include role using pieterjanv.localscope.include_role
      pieterjanv.localscope.include_role:
        name: roles/robust_outer
        input:
          name: test
      register: my_result

    - name: assert `my_result.key` is `'value'`
      ansible.builtin.assert:
        that:
          - my_result.key == 'value'

    - name: Include role using pieterjanv.localscope.include_role, tasks from main
      pieterjanv.localscope.include_role:
        name: roles/robust_outer
        tasks_from: main
        input:
          name: test

    - name: Include role using pieterjanv.localscope.include_role, tasks from tasks
      pieterjanv.localscope.include_role:
        name: roles/robust_outer
        tasks_from: tasks
        input:
          name: test

    - name: Assert role input is evaluated eagerly
      vars:
        a_var: "outer"
      pieterjanv.localscope.include_role:
        name: roles/some_role
        input:
          target: blah
          some_var: "{{ a_var }}"

    - name: test for backwards compatibility
      ansible.builtin.meta: noop
    - block:

        - name: Include role using the call role; tasks from tasks
          ansible.builtin.include_role:
            name: pieterjanv.localscope.call
          vars:
            target:
              name: roles/robust_outer
              tasks_from: tasks
            input:
              name: test

        - name: Include role using the call role; test target var can be passed
          ansible.builtin.include_role:
            name: pieterjanv.localscope.call
          vars:
            target:
              name: roles/robust_outer
              tasks_from: tasks
              target: target_test
            input:
              name: test

        - name: test using `local.call_args`
          pieterjanv.localscope.set:
            updates:
              call_args:
                name: roles/robust_outer
                tasks_from: tasks
        - include_role:
            name: pieterjanv.localscope.call
          vars:
            input:
              name: test
